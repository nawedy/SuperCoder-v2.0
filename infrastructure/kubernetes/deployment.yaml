apiVersion: v1
kind: Namespace
metadata:
  name: supercode-${ENVIRONMENT}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supercode-api
  namespace: supercode-${ENVIRONMENT}
  labels:
    app: supercode
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: supercode
      component: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: supercode
        component: api
    spec:
      containers:
      - name: supercode-api
        image: ${GCR_REPOSITORY_URI}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        env:
        - name: NODE_ENV
          value: ${ENVIRONMENT}
        - name: PORT
          value: "3000"
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: GCP_PROJECT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GCP_REGION
          value: ${GCP_REGION}
        - name: FIRESTORE_DATABASE
          value: ${DATABASE_NAME}
        envFrom:
        - secretRef:
            name: supercode-api-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: google-cloud-key
          mountPath: /var/secrets/google
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: supercode-api-config
      - name: google-cloud-key
        secret:
          secretName: supercode-gcp-key
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      nodeSelector:
        kubernetes.io/os: linux

---
apiVersion: v1
kind: Service
metadata:
  name: supercode-api
  namespace: supercode-${ENVIRONMENT}
  labels:
    app: supercode
    component: api
spec:
  selector:
    app: supercode
    component: api
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: supercode-api
  namespace: supercode-${ENVIRONMENT}
  labels:
    app: supercode
    component: api
  annotations:
    kubernetes.io/ingress.class: "gce"
    networking.gke.io/managed-certificates: "supercode-api-cert"
    kubernetes.io/ingress.global-static-ip-name: "supercode-${ENVIRONMENT}-ip"
spec:
  rules:
  - host: api.${DOMAIN_NAME}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: supercode-api
            port:
              name: http

---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: supercode-api-cert
  namespace: supercode-${ENVIRONMENT}
spec:
  domains:
  - api.${DOMAIN_NAME}

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: supercode-api
  namespace: supercode-${ENVIRONMENT}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: supercode-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 20
        periodSeconds: 30

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: supercode-api-config
  namespace: supercode-${ENVIRONMENT}
data:
  config.json: |
    {
      "environment": "${ENVIRONMENT}",
      "logLevel": "${LOG_LEVEL}",
      "api": {
        "port": 3000,
        "cors": {
          "origin": ["https://${DOMAIN_NAME}", "https://www.${DOMAIN_NAME}"],
          "methods": ["GET", "POST", "PUT", "DELETE", "OPTIONS"],
          "allowedHeaders": ["Content-Type", "Authorization"]
        },
        "rateLimit": {
          "windowMs": 900000,
          "max": 100
        }
      },
      "monitoring": {
        "enabled": true,
        "metricsPath": "/metrics"
      },
      "security": {
        "jwtSecretName": "jwt-secret-${ENVIRONMENT}",
        "tokenExpiry": "24h"
      },
      "gcp": {
        "projectId": "${GCP_PROJECT_ID}",
        "region": "${GCP_REGION}"
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: supercode-api-secrets
  namespace: supercode-${ENVIRONMENT}
type: Opaque
stringData:
  GOOGLE_APPLICATION_CREDENTIALS: /var/secrets/google/key.json 